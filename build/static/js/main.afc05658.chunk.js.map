{"version":3,"sources":["todo.js","App.jsx","index.js"],"names":["todo","App","props","add","state","value","object","task","push","setState","updateData","index","edit","flag","editTodo","deleteTodo","splice","className","TextField","id","label","variant","type","this","onChange","e","target","Button","color","size","onClick","List","component","aria-label","map","item","ListItem","divider","ListItemText","placeholder","Fab","Edit","Delete","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0NAEeA,G,MADR,I,4ECoFQC,E,kDA7EX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAQVC,IAAM,WACF,GAAyB,KAArB,EAAKC,MAAMC,MAAa,CACxB,IAAMC,EAAS,CAAEC,KAAM,EAAKH,MAAMC,OAClCL,EAAKQ,KAAKF,GACV,EAAKG,SAAS,CAEVJ,MAAO,OAfA,EAoBnBK,WAAa,SAACC,EAAON,GACjBL,EAAKW,GAAOJ,KAAOF,EACnBL,EAAKW,GAAOC,MAAO,EACnB,EAAKH,SAAS,CAAEJ,MAAO,GAAKQ,MAAK,KAvBlB,EA0BnBC,SAAW,SAACH,IACgB,IAApB,EAAKP,MAAMS,MACXb,EAAKW,GAAOC,MAAO,EACvB,EAAKH,SAAS,CAACI,MAAK,KAGhB,EAAKH,WAAWC,EAAO,EAAKP,MAAMC,QAhCvB,EAmCnBU,WAAa,SAACJ,GACVX,EAAKgB,OAAOL,EAAO,GACnB,EAAKF,SAAS,CAACJ,MAAM,MAnCrB,EAAKD,MAAM,CACPC,MAAM,GAENQ,MAAK,GALM,E,0CAwCnB,WAAU,IAAD,OASL,OACI,sBAAKI,UAAU,YAAf,UAEA,mDACI,8BACQ,cAACC,EAAA,EAAD,CAAWC,GAAG,iBAAiBC,MAAM,kBAAkBC,QAAQ,WAAYC,KAAK,OAAQjB,MAAOkB,KAAKnB,MAAMC,MAAOmB,SAAU,SAACC,GAAK,EAAKhB,SAAS,CACnJJ,MAAOoB,EAAEC,OAAOrB,aAIpB,cAACsB,EAAA,EAAD,CAAQC,MAAO,UAAWP,QAAQ,YAAYQ,KAAK,QAAQC,QAASP,KAAKpB,IAAzE,iBAEA,cAAC4B,EAAA,EAAD,CAAMC,UAAU,MAAMC,aAAW,kBAAjC,SACIjC,EAAKkC,KAAI,SAACC,EAAMxB,GACZ,OAAQ,cAACyB,EAAA,EAAD,CAAUnB,UAAU,KAAKoB,SAAO,EAAhC,SAAiC,eAACC,EAAA,EAAD,CAAcrB,UAAU,KAAxB,UAA0CkB,EAAKvB,KAAQ,cAACM,EAAA,EAAD,CAAYqB,YAAaJ,EAAK5B,KAAMiB,SAAU,SAACC,GAAD,OAAK,EAAKhB,SAAS,CAACJ,MAAOoB,EAAEC,OAAOrB,SAASiB,KAAK,SAAYa,EAAK5B,KACjN,eAACiC,EAAA,EAAD,CAAKvB,UAAU,KAAKW,MAAO,UAAWK,aAAW,OAAOH,QAAS,kBAAM,EAAKhB,SAASH,IAArF,cAA8F,cAAC8B,EAAA,EAAD,OACtF,cAACD,EAAA,EAAD,CAAKZ,MAAM,YAAYE,QAAS,kBAAI,EAAKf,WAAWJ,IAApD,SAA4D,cAAC+B,EAAA,EAAD,QAFO/B,iB,GAhEjFgC,IAAMC,WCFxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.afc05658.chunk.js","sourcesContent":["let todo;\ntodo = [];\nexport default todo","import React from \"react\"\nimport './App.css';\nimport todo from \"./todo.js\"\nimport {TextField, Button, Fab, List, ListItem, ListItemText,} from '@material-ui/core';\nimport {Edit, Delete} from \"@material-ui/icons\"\n\n\nclass App extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state={\n            value:\"\",\n\n            flag:false\n        }\n    }\n\n    add = () => {\n        if (this.state.value !== \"\"){\n            const object = { task: this.state.value}\n            todo.push(object);\n            this.setState({\n\n                value: \"\"\n            });\n        }\n    }\n\n    updateData = (index ,value) => {\n        todo[index].task = value\n        todo[index].edit = false\n        this.setState({ value: \"\" , flag:false});\n    }\n\n    editTodo = (index) => {\n        if (this.state.flag === false){\n            todo[index].edit = true\n        this.setState({flag:true})\n        }\n        else {\n            this.updateData(index, this.state.value)\n        }\n    }\n    deleteTodo = (index)=>{\n        todo.splice(index, 1)\n        this.setState({value:\"\"})\n    }\n\n    render() {\n        // const classes = makeStyles((theme) => ({\n        //         root: {\n        //         width: '100px',\n        //         maxWidth: 360,\n        //         backgroundColor: theme.palette.background.paper,\n        //     },\n        // }));\n\n        return(\n            <div className=\"container\" >\n\n            <h1> ToDo Application</h1>\n                <div>\n                        <TextField id=\"outlined-basic\" label=\"Enter Your Text\" variant=\"outlined\"  type=\"text\"  value={this.state.value} onChange={(e)=>{this.setState({\n                    value: e.target.value\n                })}} />\n\n                </div>\n                <Button color={\"primary\"} variant=\"contained\" size=\"large\" onClick={this.add}>Add</Button>\n\n                <List component=\"nav\" aria-label=\"mailbox folders\" >{\n                    todo.map((item, index)=> {\n                        return( <ListItem className=\"l2\" divider><ListItemText className=\"l1\" key={index}>{item.edit ?  <TextField  placeholder={item.task} onChange={(e)=>this.setState({value: e.target.value})} type='text' /> : item.task}\n                        <Fab className=\"fa\" color={\"primary\"} aria-label=\"edit\" onClick={() => this.editTodo(index)}> <Edit/></Fab>\n                                <Fab color=\"secondary\" onClick={()=>this.deleteTodo(index)}><Delete/></Fab>\n                        </ListItemText></ListItem>)\n\n                    })\n                }</List>\n\n            </div>\n        )\n    }\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}